---
- name: Install deployment dependencies
  hosts: all
  become: yes
  # become_method: sudo
  # vars_files:
  #   - "../vars/environment.yml"
  
  tasks:
    - name: Docker setup
      block:
        - name: Docker - Check if Docker is installed
          command: systemctl status docker
          register: docker_check
          ignore_errors: yes

        - name: Docker - Download the Docker installer
          get_url:
            url: https://get.docker.com/
            dest: /root/install_docker.sh
            mode: 0700
          when: docker_check.stderr.find('docker.service could not be found') != -1

        - name: Docker - Install Docker
          shell: /root/install_docker.sh
          when: docker_check.stderr.find('service could not be found') != -1

        - name: Docker - Remove the Docker installer file.
          file:
            state: absent
            path: /root/install_docker.sh

        - name: Docker - Enable the Docker daemon in systemd
          systemd:
            name: docker
            enabled: yes
            masked: no

        - name: Docker - Start the Docker daemon
          systemd:
            name: docker
            state: started
            masked: no

        - name: Docker Compose - Check if Docker Compose is installed
          command: docker-compose --version
          register: docker_compose_check
          ignore_errors: yes

        - name: Docker Compose - Download and install Docker Compose
          get_url:
            url: https://github.com/docker/compose/releases/download/1.28.2/docker-compose-Linux-{{ ansible_userspace_architecture }}
            dest: /usr/bin/docker-compose
            mode: 0755
          when:
            - docker_compose_check.msg is defined
            - docker_compose_check.msg.find('No such file or directory') != -1

        - name: Systemd - Restart Docker daemon
          systemd:
            name: docker
            state: restarted


    ### CentOS setup
    - name: CentOS dependencies
      block:
        - name: Yum - Install Nginx
          yum:
            name: nginx
            state: present

        - name: Systemd - Enable nginx service
          systemd:
            name: nginx
            state: started
            enabled: yes

        - name: Yum - Install firewalld
          yum:
            name: firewalld
            state: present

        - name: Yum - Install Rsync
          yum:
            name: rsync
            state: present
          when: ansible__distribution is "CentOS"

        - name: Yum - Install Git
          yum:
            name: git
            state: present

        - name: Yum - Install Vim
          yum:
            name: vim
            state: present

        - name: Yum - Install Wget
          yum:
            name: wget
            state: present

        - name: Yum - Install Python3 devel
          yum:
            name: python3-devel
            state: present

        - name: Yum - Install Python3 pip
          yum:
            name: python3-pip
            state: present
      when: ansible_facts['distribution'] == 'CentOS'


    - name: Ubuntu dependencies
      block:
        - name: Apt - Install Nginx
          apt:
            name: nginx
            state: present

        - name: Systemd - Enable nginx service
          systemd:
            name: nginx
            state: started
            enabled: yes

        - name: Apt - install firewalld
          apt:
            name: firewalld
            state: present

        - name: Apt - Install Rsync
          apt:
            name: rsync
            state: present

        - name: Apt - Install Git
          apt:
            name: git
            state: present

        - name: Apt - Install Vim
          apt:
            name: vim
            state: present

        - name: Apt - Install Wget
          apt:
            name: wget
            state: present

        - name: Apt - Install Python3 dev
          apt:
            name: python3-dev
            state: present

        - name: Apt - Install Python3 dev
          apt:
            name: python3-pip
            state: present

      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: FirewallD setup
      block:
        - name: Systemd - Enable firewalld service
          systemd:
            name: firewalld
            state: started
            enabled: yes

        - name: FirewallD - Enable SSH
          shell: firewall-cmd --add-service=ssh

          # RPC - testnet
        - name: FirewallD - Enable 8545 port
          shell: firewall-cmd --add-port=8545/tcp

          # RPC - mainnet
        - name: FirewallD - Enable 8546 port
          shell: firewall-cmd --add-port=8546/tcp
        
          # WS - testnet
        - name: FirewallD - Enable 8455 port
          shell: firewall-cmd --add-port=8455/tcp

          # WS - mainnet
        - name: FirewallD - Enable 8456 port
          shell: firewall-cmd --add-port=8456/tcp
        
          # Parity - testnet
        - name: FirewallD - Enable 30300 (TCP) port
          shell: firewall-cmd --add-port=30300/tcp

        - name: FirewallD - Enable 30300 (UDP) port
          shell: firewall-cmd --add-port=30301/tcp

          # Parity - mainnet
        - name: FirewallD - Enable 30301 (TCP) port
          shell: firewall-cmd --add-port=30301/tcp

        - name: FirewallD - Enable 30301 (UDP) port
          shell: firewall-cmd --add-port=30301/tcp


        - name: FirewallD - Make configuration permanent
          shell: firewall-cmd --runtime-to-permanent

    - name: Pip dependencies
      block:
        - name: Pip - upgrade pip
          pip:
            name: pip
            state: latest

        - name: Pip - install Docker
          pip:
            name: docker
            state: latest

        - name: Pip - install Docker Compose
          pip:
            name: docker-compose

    - name: Systemd - Restart Docker daemon
      systemd:
        name: docker
        state: restarted
